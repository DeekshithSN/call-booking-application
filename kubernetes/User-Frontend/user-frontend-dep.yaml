apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user-frontend
  name: user-frontend
  namespace: user-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-frontend
  template:
    metadata:
      labels:
        app: user-frontend
    spec:
      volumes:
        - name: user-frontend-volume
          configMap:
            name: user-frontend
      containers:
      - image: 805417853753.dkr.ecr.us-east-1.amazonaws.com/user-ui:latest #deekshithsn/user-ui-new:latest #deekshithsn/userui:1.0
        name: user-frontend
        ports:
          - name: http 
            containerPort: 3000
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001  

        # resources:
        #   requests:
        #     memory: "128Mi"
        #     cpu: "250m"
        #   limits:
        #     memory: "128Mi"
        #     cpu: "250m"          
        resources:
          requests:
            memory: "2Gi"
            cpu: "1500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5  
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5        
        volumeMounts:
          - name: user-frontend-volume
            mountPath: /app/.env
            subPath: .env
